---
- name: "Set user_data variable"
  ansible.builtin.set_fact:
    user_data: "{{ users_available[user.username] }}"

- name: "User group creation: {{ user.username }}"
  ansible.builtin.group:
    name: "{{ user.username }}"
    gid: "{{ user.uid if user.uid is defined else user_data.uid if user_data.uid is defined else omit }}"
  when: users_create_user_group

- name: "Set user group fact 1"
  ansible.builtin.set_fact:
    user_groups: "{{ user.groups | default(user_data.groups) | default([]) }}"

- name: "Set user group fact 2"
  ansible.builtin.set_fact:
    user_groups: "{{ user_groups | union(users_admin_groups) }}"
  when: user.is_admin | default(user_data.is_admin) | default(False)

- name: "User creation: {{ user.username }}"
  ansible.builtin.user:
    name: "{{ user.username }}"
    group: "{{ user.group | default(user_data.group) | default(user.username) }}"
    groups: "{{ user_groups | join(',') if user_groups | length else omit }}"
    shell: "{{ user.shell | default(user_data.shell) | default(users_default_shell) }}"
    comment: "{{ user.comment | default(user_data.comment) | default(user_data.name) | default(omit) }}"
    uid: "{{ user.uid | default(user_data.uid) | default(omit) }}"
    createhome: true
    password: "{{ user.password | default(user_data.password) | default(omit) }}"
    update_password: "{{ users_update_password }}"

- name: "Is user admin: {{ user.username }}"
  ansible.builtin.user:
    name: "{{ user.username }}"
    groups: "{{ users_admin_groups | join(',') }}"
    append: true
  when: user.is_admin|default(user_data.is_admin)|default(False)
